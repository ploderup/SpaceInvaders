/*******************************************************************************
 * graphics.h
 * ==========================================================================
 * COURSE INFO
 * ECEn 427: Embedded Programming
 * Prof. Brad Hutchings
 *
 * AUTHORS
 * Brad Hutchings (graphics)
 * Davis Crabb
 * Peter Loderup
 *
 * UPDATE LOG
 * 28 Sep 2017 | Started file. Pulled all grahpics from course website at
 * 				 [ee427plblabs.groups.et.byu.net/wiki/doku.php?id=lab_3].
 * 05 Oct 2017 | Added letters for "Score" and "Lives". Still need to add
 *               packwords corresponding to width of letters (packword13,
 *               etcetera). Might want to scale letters to better fit screen
 *               size.
 ******************************************************************************/
// Includes
#include <stdint.h>

/**
 * The following packwords give us the ability to compress the bitmaps.  
 */
#define packword24(b23,b22,b21,b20,b19,b18,b17,b16,b15,b14,b13,b12,b11,b10,b9,b8,b7,b6,b5,b4,b3,b2,b1,b0) \
((b23 << 23) | (b22 << 22) | (b21 << 21) | (b20 << 20) | (b19 << 19) | (b18 << 18) | (b17 << 17) | (b16 << 16) | \
 (b15 << 15) | (b14 << 14) | (b13 << 13) | (b12 << 12) | (b11 << 11) | (b10 << 10) | (b9  << 9 ) | (b8  << 8 ) | \
 (b7  << 7 ) | (b6  << 6 ) | (b5  << 5 ) | (b4  << 4 ) | (b3  << 3 ) | (b2  << 2 ) | (b1  << 1 ) | (b0  << 0 ) )

#define packword16(b15,b14,b13,b12,b11,b10,b9,b8,b7,b6,b5,b4,b3,b2,b1,b0) \
((b15 << 15) | (b14 << 14) | (b13 << 13) | (b12 << 12) | (b11 << 11) | (b10 << 10) | (b9  << 9 ) | (b8  << 8 ) | \
 (b7  << 7 ) | (b6  << 6 ) | (b5  << 5 ) | (b4  << 4 ) | (b3  << 3 ) | (b2  << 2 ) | (b1  << 1 ) | (b0  << 0 ) )

#define packword15(b14,b13,b12,b11,b10,b9,b8,b7,b6,b5,b4,b3,b2,b1,b0) \
((b14 << 14) | (b13 << 13) | (b12 << 12) | (b11 << 11) | (b10 << 10) | (b9  << 9 ) | (b8  << 8 ) | \
 (b7  << 7 ) | (b6  << 6 ) | (b5  << 5 ) | (b4  << 4 ) | (b3  << 3 ) | (b2  << 2 ) | (b1  << 1 ) | (b0  << 0 ) )

#define packword13(b12,b11,b10,b9,b8,b7,b6,b5,b4,b3,b2,b1,b0) \
((b12 << 12) | (b11 << 11) | (b10 << 10) | (b9  << 9 ) | (b8  << 8 ) |						  \
 (b7  << 7 ) | (b6  << 6 ) | (b5  << 5 ) | (b4  << 4 ) | (b3  << 3 ) | (b2  << 2 ) | (b1  << 1 ) | (b0  << 0 ) )

#define packword12(b11,b10,b9,b8,b7,b6,b5,b4,b3,b2,b1,b0) \
((b11 << 11) | (b10 << 10) | (b9  << 9 ) | (b8  << 8 ) | \
 (b7  << 7 ) | (b6  << 6 ) | (b5  << 5 ) | (b4  << 4 ) | (b3  << 3 ) | (b2  << 2 ) | (b1  << 1 ) | (b0  << 0 ) )

#define packword10(b9,b8,b7,b6,b5,b4,b3,b2,b1,b0) \
((b9  << 9 ) | (b8  << 8 ) | \
 (b7  << 7 ) | (b6  << 6 ) | (b5  << 5 ) | (b4  << 4 ) | (b3  << 3 ) | (b2  << 2 ) | (b1  << 1 ) | (b0  << 0 ) )

#define packword6(b5,b4,b3,b2,b1,b0) \
((b5  << 5 ) | (b4  << 4 ) | (b3  << 3 ) | (b2  << 2 ) | (b1  << 1 ) | (b0  << 0 ) )

#define packword3(b2,b1,b0) \
((b2  << 2 ) | (b1  << 1 ) | (b0  << 0 ))


// First tank explosion guise
static const uint32_t tank_explosion1_15x8[] =
{
packword15(0,0,0,0,1,0,0,0,0,0,0,0,0,0,0),
packword15(0,0,1,0,0,0,0,0,0,0,0,0,0,0,0),
packword15(0,0,0,0,0,0,0,0,0,0,1,1,0,0,0),
packword15(0,0,1,0,0,0,0,0,0,1,0,0,0,1,0),
packword15(1,0,0,0,1,1,0,1,1,0,1,1,0,1,0),
packword15(0,0,1,1,1,1,1,1,1,1,1,1,1,0,1),
packword15(0,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
packword15(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
};
// Second tank explosion guise
static const uint32_t tank_explosion2_15x8[] =
{
packword15(0,0,0,0,0,0,0,1,0,0,0,0,0,0,0),
packword15(0,1,0,0,1,0,0,1,0,0,0,0,0,1,0),
packword15(0,0,0,0,0,0,0,0,1,0,0,1,0,0,0),
packword15(0,1,0,0,0,0,0,0,0,0,0,0,1,0,0),
packword15(0,1,0,0,1,1,0,1,1,0,1,1,0,0,0),
packword15(0,0,1,1,1,1,1,1,1,1,1,1,1,0,0),
packword15(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
packword15(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
};

/**
 * Number, 9
 */
static const uint32_t number_9_13x13[] =
{
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
};

/**
 * Number, 8
 */
static const uint32_t number_8_13x13[] =
{
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
};

/**
 * Number, 7
 */
static const uint32_t number_7_13x13[] =
{
packword13(1,1,1,1,1,1,1,1,1,1,1,1,1),
packword13(1,1,1,1,1,1,1,1,1,1,1,1,1),
packword13(1,1,1,1,1,1,1,1,1,1,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,0,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,0,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,0,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,0,1,1),
packword13(0,0,0,0,0,0,0,0,1,1,1,0,0),
packword13(0,0,0,0,0,0,0,0,1,1,1,0,0),
packword13(0,0,0,0,0,0,0,0,1,1,1,0,0),
packword13(0,0,0,0,0,0,0,0,1,1,1,0,0),
packword13(0,0,0,0,0,0,0,0,1,1,1,0,0),
packword13(0,0,0,0,0,0,0,0,1,1,1,0,0),
};

/**
 * Number, 6
 */
static const uint32_t number_6_13x13[] =
{
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
};

/**
 * Number, 5
 */
static const uint32_t number_5_13x13[] =
{
packword13(1,1,1,1,1,1,1,1,1,1,1,1,1),
packword13(1,1,1,1,1,1,1,1,1,1,1,1,1),
packword13(1,1,1,1,1,1,1,1,1,1,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
};

/**
 * Number, 4
 */
static const uint32_t number_4_13x13[] =
{
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,1,1,1,1,1,1,1,1,1,1),
packword13(1,1,1,1,1,1,1,1,1,1,1,1,1),
packword13(1,1,1,1,1,1,1,1,1,1,1,1,1), 
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
};

/**
 * Number, 3
 */
static const uint32_t number_3_13x13[] =
{
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
};

/**
 * Number, 2
 */
static const uint32_t number_2_13x13[] =
{
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,1,1,1),
packword13(1,1,1,1,1,1,1,1,1,1,1,1,1),
packword13(1,1,1,1,1,1,1,1,1,1,1,1,1),
};

/**
 * Number, 1
 */
static const uint32_t number_1_13x13[] =
{
packword13(0,0,0,0,0,0,0,1,1,1,1,1,1),
packword13(0,0,0,0,0,0,0,1,1,1,1,1,1),
packword13(0,0,0,0,0,0,0,1,1,1,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
};

/**
 * Number, 0
 */
static const uint32_t number_0_13x13[] =
{
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
};

/**
 * Letter, A
 */
static const uint32_t letter_A_13x13[] =
{
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
};

/**
 * Letter, G
 */
static const uint32_t letter_G_13x13[] =
{
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
};

/**
 * Letter, S
 */
static const uint32_t letter_S_13x13[] =
{
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
};

/**
 * Letter, C
 */
static const uint32_t letter_C_13x13[] =
{
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,1,1,1),
};

/**
 * Letter, O
 */
static const uint32_t letter_O_13x13[] =
{
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
packword13(0,0,0,1,1,1,1,1,1,1,0,0,0),
};

/**
 * Letter, R
 */
static const uint32_t letter_R_13x13[] =
{
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
};

/**
 * Letter, E
 */
static const uint32_t letter_E_13x13[] =
{
packword13(1,1,1,1,1,1,1,1,1,1,1,1,1),
packword13(1,1,1,1,1,1,1,1,1,1,1,1,1),
packword13(1,1,1,1,1,1,1,1,1,1,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(1,1,1,0,0,0,0,0,0,0,0,0,0),
packword13(1,1,1,1,1,1,1,1,1,1,1,1,1),
packword13(1,1,1,1,1,1,1,1,1,1,1,1,1),
packword13(1,1,1,1,1,1,1,1,1,1,1,1,1),
};

/**
 * Letter, L
 */
static const uint32_t letter_L_10x13[] =
{
packword10(1,1,1,0,0,0,0,0,0,0),
packword10(1,1,1,0,0,0,0,0,0,0),
packword10(1,1,1,0,0,0,0,0,0,0),
packword10(1,1,1,0,0,0,0,0,0,0),
packword10(1,1,1,0,0,0,0,0,0,0),
packword10(1,1,1,0,0,0,0,0,0,0),
packword10(1,1,1,0,0,0,0,0,0,0),
packword10(1,1,1,0,0,0,0,0,0,0),
packword10(1,1,1,0,0,0,0,0,0,0),
packword10(1,1,1,0,0,0,0,0,0,0),
packword10(1,1,1,1,1,1,1,1,1,1),
packword10(1,1,1,1,1,1,1,1,1,1),
packword10(1,1,1,1,1,1,1,1,1,1),
};

/**
 * Letter, I
 */
static const uint32_t letter_I_3x13[] =
{
packword3(1,1,1),
packword3(1,1,1),
packword3(1,1,1),
packword3(1,1,1),
packword3(1,1,1),
packword3(1,1,1),
packword3(1,1,1),
packword3(1,1,1),
packword3(1,1,1),
packword3(1,1,1),
packword3(1,1,1),
packword3(1,1,1),
packword3(1,1,1),
};

/**
 * Letter, V
 */
static const uint32_t letter_V_13x13[] =
{
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(1,1,1,0,0,0,0,0,0,0,1,1,1),
packword13(0,0,0,1,1,0,0,0,1,1,0,0,0),
packword13(0,0,0,1,1,0,0,0,1,1,0,0,0),
packword13(0,0,0,0,0,1,1,1,0,0,0,0,0),
packword13(0,0,0,0,0,1,1,1,0,0,0,0,0),
packword13(0,0,0,0,0,1,1,1,0,0,0,0,0),
};

/**
 * Tank Graphic
 */
static const uint32_t tank_15x8[] =
{
packword15(0,0,0,0,0,0,0,1,0,0,0,0,0,0,0),
packword15(0,0,0,0,0,0,1,1,1,0,0,0,0,0,0),
packword15(0,0,0,0,0,0,1,1,1,0,0,0,0,0,0),
packword15(0,1,1,1,1,1,1,1,1,1,1,1,1,1,0),
packword15(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
packword15(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
packword15(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
packword15(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
};

/**
 * Saucer Graphic
 */
static const uint32_t saucer_16x7[] =
{
packword16(0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0),
packword16(0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0),
packword16(0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0),
packword16(0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0),
packword16(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
packword16(0,0,1,1,1,0,0,1,1,0,0,1,1,1,0,0),
packword16(0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0)
};


/**
 * Alien Explosion
 */
static const uint32_t alien_explosion_12x10[] =
{
packword12(0,0,0,0,0,0,1,0,0,0,0,0),
packword12(0,0,0,1,0,0,1,0,0,0,1,0),
packword12(1,0,0,1,0,0,0,0,0,1,0,0),
packword12(0,1,0,0,1,0,0,0,1,0,0,0),
packword12(0,0,0,0,0,0,0,0,0,0,1,1),
packword12(1,1,0,0,0,0,0,0,0,0,0,0),
packword12(0,0,0,1,0,0,0,1,0,0,1,0),
packword12(0,0,1,0,0,0,0,0,1,0,0,1),
packword12(0,1,0,0,0,1,0,0,1,0,0,0),
packword12(0,0,0,0,0,1,0,0,0,0,0,0)
};


/**
 * Alien Top In
 */
static const uint32_t alien_top_in_12x8[] =
{
packword12(0,0,0,0,0,1,1,0,0,0,0,0),
packword12(0,0,0,0,1,1,1,1,0,0,0,0),
packword12(0,0,0,1,1,1,1,1,1,0,0,0),
packword12(0,0,1,1,0,1,1,0,1,1,0,0),
packword12(0,0,1,1,1,1,1,1,1,1,0,0),
packword12(0,0,0,1,0,1,1,0,1,0,0,0),
packword12(0,0,1,0,0,0,0,0,0,1,0,0),
packword12(0,0,0,1,0,0,0,0,1,0,0,0)
};


/**
 * Alien Top Out
 */
static const uint32_t alien_top_out_12x8[] =
{
packword12(0,0,0,0,0,1,1,0,0,0,0,0),
packword12(0,0,0,0,1,1,1,1,0,0,0,0),
packword12(0,0,0,1,1,1,1,1,1,0,0,0),
packword12(0,0,1,1,0,1,1,0,1,1,0,0),
packword12(0,0,1,1,1,1,1,1,1,1,0,0),
packword12(0,0,0,0,1,0,0,1,0,0,0,0),
packword12(0,0,0,1,0,1,1,0,1,0,0,0),
packword12(0,0,1,0,1,0,0,1,0,1,0,0)
};



/**
 * Alien Middle In
 */
static const uint32_t alien_middle_in_12x8[] =
{
packword12(0,0,0,1,0,0,0,0,0,1,0,0),
packword12(0,0,0,0,1,0,0,0,1,0,0,0),
packword12(0,0,0,1,1,1,1,1,1,1,0,0),
packword12(0,0,1,1,0,1,1,1,0,1,1,0),
packword12(0,1,1,1,1,1,1,1,1,1,1,1),
packword12(0,1,1,1,1,1,1,1,1,1,1,1),
packword12(0,1,0,1,0,0,0,0,0,1,0,1),
packword12(0,0,0,0,1,1,0,1,1,0,0,0)
};


/**
 * Alien Middle Out
 */
static const uint32_t alien_middle_out_12x8[] =
{
packword12(0,0,0,1,0,0,0,0,0,1,0,0),
packword12(0,1,0,0,1,0,0,0,1,0,0,1),
packword12(0,1,0,1,1,1,1,1,1,1,0,1),
packword12(0,1,1,1,0,1,1,1,0,1,1,1),
packword12(0,1,1,1,1,1,1,1,1,1,1,1),
packword12(0,0,1,1,1,1,1,1,1,1,1,0),
packword12(0,0,0,1,0,0,0,0,0,1,0,0),
packword12(0,0,1,0,0,0,0,0,0,0,1,0)
};

static const uint32_t alien_bottom_in_12x8[] =
{
packword12(0,0,0,0,1,1,1,1,0,0,0,0),
packword12(0,1,1,1,1,1,1,1,1,1,1,0),
packword12(1,1,1,1,1,1,1,1,1,1,1,1),
packword12(1,1,1,0,0,1,1,0,0,1,1,1),
packword12(1,1,1,1,1,1,1,1,1,1,1,1),
packword12(0,0,1,1,1,0,0,1,1,1,0,0),
packword12(0,1,1,0,0,1,1,0,0,1,1,0),
packword12(0,0,1,1,0,0,0,0,1,1,0,0)
};

/**
 * Alien Bottom Out
 */
static const uint32_t alien_bottom_out_12x8[] =
{
packword12(0,0,0,0,1,1,1,1,0,0,0,0),
packword12(0,1,1,1,1,1,1,1,1,1,1,0),
packword12(1,1,1,1,1,1,1,1,1,1,1,1),
packword12(1,1,1,0,0,1,1,0,0,1,1,1),
packword12(1,1,1,1,1,1,1,1,1,1,1,1),
packword12(0,0,0,1,1,0,0,1,1,0,0,0),
packword12(0,0,1,1,0,1,1,0,1,1,0,0),
packword12(1,1,0,0,0,0,0,0,0,0,1,1)
};


/**
 * Entire Bunker
 */
static const uint32_t bunker_24x18[] =
{
packword24(0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0),
packword24(0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0),
packword24(0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0),
packword24(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
packword24(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
packword24(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
packword24(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
packword24(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
packword24(1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1),
packword24(1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1),
packword24(1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1),
packword24(1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1),
packword24(1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1),
packword24(1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1),
packword24(1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1),
packword24(1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1),
packword24(1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1),
packword24(1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1)
};


/**
 * Bunker Damage 0
 */
static const uint32_t bunkerDamage0_6x6[] = {
packword6(0,1,1,0,0,0),
packword6(0,0,0,0,0,1),
packword6(1,1,0,1,0,0),
packword6(1,0,0,0,0,0),
packword6(0,0,1,1,0,0),
packword6(0,0,0,0,1,0)
};


/**
 * Bunker Damage 1
 */
static const uint32_t bunkerDamage1_6x6[] = {
packword6(1,1,1,0,1,0),
packword6(1,0,1,0,0,1),
packword6(1,1,0,1,1,1),
packword6(1,0,0,0,0,0),
packword6(0,1,1,1,0,1),
packword6(0,1,1,0,1,0)
};


/**
 * Bunker Damage 2
 */
static const uint32_t bunkerDamage2_6x6[] = {
packword6(1,1,1,1,1,1),
packword6(1,0,1,1,0,1),
packword6(1,1,0,1,1,1),
packword6(1,1,0,1,1,0),
packword6(0,1,1,1,0,1),
packword6(1,1,1,1,1,1)
};


/**
 * Bunker Damage 3
 */
static const uint32_t bunkerDamage3_6x6[] = {
packword6(1,1,1,1,1,1),
packword6(1,1,1,1,1,1),
packword6(1,1,1,1,1,1),
packword6(1,1,1,1,1,1),
packword6(1,1,1,1,1,1),
packword6(1,1,1,1,1,1)
};

/**
 * Alien Bullets
 */
static const uint32_t diagUp_3x5[] = {
packword3(0,1,0),
packword3(1,0,0),
packword3(0,1,0),
packword3(0,0,1),
packword3(0,1,0)
};

static const uint32_t diagDown_3x5[] = {
packword3(0,1,0),
packword3(0,0,1),
packword3(0,1,0),
packword3(1,0,0),
packword3(0,1,0)
};

static const uint32_t crossUp_3x5[] = {
packword3(0,1,0),
packword3(1,1,1),
packword3(0,1,0),
packword3(0,1,0),
packword3(0,1,0)
};

static const uint32_t crossMid_3x5[] = {
packword3(0,1,0),
packword3(0,1,0),
packword3(1,1,1),
packword3(0,1,0),
packword3(0,1,0)
};

static const uint32_t crossDown_3x5[] = {
packword3(0,1,0),
packword3(0,1,0),
packword3(0,1,0),
packword3(1,1,1),
packword3(0,1,0)
};
